=begin
#ForestVPN Cloud API

#ForestVPN Cloud - it's a Google Cloud but for VPN apps. Ready to use VPN Cloud Platform minimizes efforts to build fast, secure, and modern VPN apps. 

The version of the OpenAPI document: 2.0
Contact: support@forestvpn.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ForestVPNCloudAPI::ProfilesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProfilesApi' do
  before do
    # run before each test
    @api_instance = ForestVPNCloudAPI::ProfilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProfilesApi' do
    it 'should create an instance of ProfilesApi' do
      expect(@api_instance).to be_instance_of(ForestVPNCloudAPI::ProfilesApi)
    end
  end

  # unit tests for create_profile
  # Create profile
  # @param [Hash] opts the optional parameters
  # @option opts [CreateOrUpdateProfileRequest] :create_or_update_profile_request 
  # @return [Profile]
  describe 'create_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_profile_data_usage_limit
  # Create profile data usage limit
  # @param profile_id 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateOrUpdateDataUsageLimitRequest] :create_or_update_data_usage_limit_request 
  # @return [DataUsageLimit]
  describe 'create_profile_data_usage_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_profile
  # Delete profile
  # Deletes profile and all associated resources
  # @param profile_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_profile_data_usage_limit
  # Delete profile data usage limit
  # @param profile_id 
  # @param limit_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_profile_data_usage_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_profile
  # Profile details
  # @param profile_id 
  # @param [Hash] opts the optional parameters
  # @return [Profile]
  describe 'get_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_profile_data_usage_limit
  # Profile data usage limit details
  # @param profile_id 
  # @param limit_id 
  # @param [Hash] opts the optional parameters
  # @return [DataUsageLimit]
  describe 'get_profile_data_usage_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_profile_data_usage_limits
  # Profile data usage limits list
  # @param profile_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<DataUsageLimit>]
  describe 'list_profile_data_usage_limits test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_profile_stats
  # Profile stats list
  # @param profile_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :aggregate_by 
  # @option opts [Date] :date_after 
  # @option opts [Date] :date_before 
  # @option opts [Float] :per_page 
  # @option opts [Float] :page 
  # @return [Array<ProfileStats>]
  describe 'list_profile_stats test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_profiles
  # Profile list
  # @param [Hash] opts the optional parameters
  # @option opts [String] :external_key 
  # @option opts [Float] :per_page 
  # @option opts [Float] :page 
  # @return [Array<Profile>]
  describe 'list_profiles test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partial_update_profile
  # Partial update profile details
  # @param profile_id 
  # @param create_or_update_profile_request 
  # @param [Hash] opts the optional parameters
  # @return [Profile]
  describe 'partial_update_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partial_update_profile_data_usage_limit
  # Partial update profile data usage limit
  # @param profile_id 
  # @param limit_id 
  # @param create_or_update_data_usage_limit_request 
  # @param [Hash] opts the optional parameters
  # @return [DataUsageLimit]
  describe 'partial_update_profile_data_usage_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_profile
  # Update profile details
  # @param profile_id 
  # @param create_or_update_profile_request 
  # @param [Hash] opts the optional parameters
  # @return [Profile]
  describe 'update_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_profile_data_usage_limit
  # Update profile data usage limit
  # @param profile_id 
  # @param limit_id 
  # @param create_or_update_data_usage_limit_request 
  # @param [Hash] opts the optional parameters
  # @return [DataUsageLimit]
  describe 'update_profile_data_usage_limit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
